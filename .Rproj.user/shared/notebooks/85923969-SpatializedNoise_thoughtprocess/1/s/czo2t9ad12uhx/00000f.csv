"0","rm(list = ls())"
"0","library(mgcv)"
"0","library(dplyr)"
"0","library(lubridate)"
"0","library(viridis)"
"0","library(ggplot2)"
"0",""
"0","load('Adrift_GPS_2023.rds')"
"0","load('Adrift_NL_2023_500Hz.rds')"
"0",""
"0","# Haversine fx"
"0","haversine_dist <- function(long1, lat1, long2, lat2) {"
"0","  rad <- pi/180"
"0","  a1 <- lat1*rad"
"0","  a2 <- long1*rad"
"0","  b1 <- lat2*rad"
"0","  b2 <- long2*rad"
"0","  dlon <- b2 - a2"
"0","  dlat <- b1 - a1"
"0","  a <- (sin(dlat/2))^2 + cos(a1)*cos(b1)*(sin(dlon/2))^2"
"0","  c <- 2*atan2(sqrt(a), sqrt(1 - a))"
"0","  R <- 6378137"
"0","  d <- R*c"
"0","  return(d)"
"0","}"
"0",""
"0","# Link the gps and the noise levels"
"0","noiseDf$Lon = NaN"
"0","noiseDf$Lat = NaN"
"0",""
"0","DriftNames = unique(GPSdf$DriftName)"
"0",""
"0","for(drift in DriftNames){"
"0","  GPSsub = subset(GPSdf, DriftName == drift)"
"0","  NLsub =  subset(noiseDf, DriftName==drift)"
"0","  "
"0","  UTMflon <- approxfun(GPSsub$UTC, GPSsub$Longitude)"
"0","  UTMflat <- approxfun(GPSsub$UTC, GPSsub$Latitude)"
"0","  "
"0","  ##############################################################"
"0","  # Calculate the range from the whale to the GPS, TDOA and RL"
"0","  ############################################################"
"0","  "
"0","  # Lat/lon/ of the drift when the call was produced"
"0","  noiseDf$Lon[noiseDf$DriftName==drift] =UTMflon(NLsub$datetime_posix)"
"0","  noiseDf$Lat[noiseDf$DriftName==drift] = UTMflat(NLsub$datetime_posix)"
"0","  "
"0","  "
"0","}"
"0","colnames(noiseDf)[2]<-'NL'"
"0","noiseDf$DriftName<-as.factor(noiseDf$DriftName)"
"0",""
"0","# Clear out any NA values"
"0","noiseDf = noiseDf[!is.na(noiseDf$Lat),]"
"0",""
"0","ggplot(noiseDf)+"
"0","  geom_point(aes(x=Lon, y=Lat, color=NL))+"
"0","  scale_color_viridis_c(option='plasma')"
